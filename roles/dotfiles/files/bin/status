#!/bin/bash
# Stolen from Kai Hendry

# This function parses /proc/net/dev file searching for a line containing $interface data.
# Within that line, the first and ninth numbers after ':' are respectively the received and transmited bytes.
function get_bytes {
  interface=$(ip route get 8.8.8.8 2>/dev/null| awk '{print $5}')
  line=$(grep $interface /proc/net/dev | cut -d ':' -f 2 | awk '{print "received_bytes="$1, "transmitted_bytes="$9}')
  eval $line
  now=$(date +%s%N)
}

# Function which calculates the speed using actual and old byte number.
# Speed is shown in KByte per second when greater or equal than 1 KByte per second.
# This function should be called each second.
function get_velocity {
  value=$1
  old_value=$2
  now=$3

  timediff=$(($now - $old_time))
  velKB=$(echo "1000000000*($value-$old_value)/1024/$timediff" | bc)
  if [ "$velKB" -gt 1024 ]; then
    echo $(echo "scale=2; $velKB/1024" | bc)MB/s
  else
    echo ${velKB}KB/s
  fi
}

function print_volume {
  amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/'
}

function print_wifi {
  ip=$(ip route get 8.8.8.8 2>/dev/null|grep -Eo 'src [0-9.]+'|grep -Eo '[0-9.]+')

  if=wlan0
  while IFS=$': \t' read -r label value; do
    case $label in
      SSID) ssid=$value ;;
      signal) signal=$value ;;
    esac
  done < <(iw "$if" link)

  echo -e "$ssid $signal $ip"
}

function print_mem {
  echo $(($(grep -m1 'MemAvailable:' /proc/meminfo | awk '{print $2}') / 1024))
}

function print_temp {
  test -f /sys/class/thermal/thermal_zone0/temp || return 0
  head -c 2 /sys/class/thermal/thermal_zone0/temp
}

function print_date {
  date "+%a %m-%d %T%:::z"
}

function print_battery {
  upower -i /org/freedesktop/UPower/devices/battery_BAT0 | awk '/percentage/ { print substr($2, 0, length($2) - 1) }'
}

function print_mail() {
  find mail/personal/inbox/new -type f | wc -l
}

while true; do

  # Get new transmitted, received byte number values and current time
  get_bytes

  # Calculates speeds
  vel_recv="$(get_velocity $received_bytes $old_received_bytes $now)"
  vel_trans="$(get_velocity $transmitted_bytes $old_transmitted_bytes $now)"

  xsetroot -name "$(print_mail) $(print_mem) $vel_recv $vel_trans $(print_temp) $(print_wifi) $(print_volume) $(print_battery) $(print_date)"

  # Update old values to perform new calculations
  old_received_bytes=$received_bytes
  old_transmitted_bytes=$transmitted_bytes
  old_time=$now

  sleep 1

done
